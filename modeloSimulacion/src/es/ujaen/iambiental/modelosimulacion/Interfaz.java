/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.ujaen.iambiental.modelosimulacion;

import com.sun.deploy.trace.Trace;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author Agustín Ruiz Linares <www.agustruiz.es>
 */
public class Interfaz extends javax.swing.JFrame {

    //Variables del sistema
    boolean enFuncionamiento;
    ClienteUDP socket;

    /**
     * Creates new form Main
     */
    public Interfaz() {
        initComponents();
        this.enFuncionamiento = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIniciarSimulacion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        jtpPrincipal = new javax.swing.JTabbedPane();
        jpConfiguracion = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtIp = new javax.swing.JTextField();
        txtPuerto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        txtMensaje = new javax.swing.JTextField();
        btnEnviarMensaje = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        btnCargarFichero = new javax.swing.JButton();
        jpLog = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jpFilepicker = new javax.swing.JPanel();
        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iAmbiental - Modelo de Simulación");
        setMinimumSize(new java.awt.Dimension(450, 300));

        btnIniciarSimulacion.setText("Iniciar");
        btnIniciarSimulacion.setFocusable(false);
        btnIniciarSimulacion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIniciarSimulacion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIniciarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSimulacionActionPerformed(evt);
            }
        });

        jLabel1.setText("Fecha");

        lblFecha.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblFecha.setText("mié 23 de diciembre de 2014");

        jLabel3.setText("Hora");

        lblHora.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblHora.setText("00:00");

        jLabel12.setText("Dirección IP");

        jLabel13.setText("Puerto");

        jLabel14.setText("Mensaje");

        txtMensaje.setEnabled(false);

        btnEnviarMensaje.setText("Enviar");
        btnEnviarMensaje.setEnabled(false);
        btnEnviarMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarMensajeActionPerformed(evt);
            }
        });

        jLabel15.setText("Fichero");

        txtFile.setEnabled(false);

        btnCargarFichero.setText("Enviar lecturas");
        btnCargarFichero.setEnabled(false);
        btnCargarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarFicheroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpConfiguracionLayout = new javax.swing.GroupLayout(jpConfiguracion);
        jpConfiguracion.setLayout(jpConfiguracionLayout);
        jpConfiguracionLayout.setHorizontalGroup(
            jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpConfiguracionLayout.createSequentialGroup()
                        .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPuerto, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                            .addComponent(txtIp)))
                    .addComponent(jSeparator1)
                    .addGroup(jpConfiguracionLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarMensaje))
                    .addComponent(jSeparator2)
                    .addGroup(jpConfiguracionLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCargarFichero)))
                .addContainerGap())
        );
        jpConfiguracionLayout.setVerticalGroup(
            jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnviarMensaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarFichero))
                .addContainerGap(242, Short.MAX_VALUE))
        );

        jtpPrincipal.addTab("Configuración", jpConfiguracion);

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        txtLog.setRows(5);
        jpLog.setViewportView(txtLog);
        txtLog.getAccessibleContext().setAccessibleParent(jtpPrincipal);

        jtpPrincipal.addTab("Log", jpLog);

        jFileChooser1.setEnabled(false);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpFilepickerLayout = new javax.swing.GroupLayout(jpFilepicker);
        jpFilepicker.setLayout(jpFilepickerLayout);
        jpFilepickerLayout.setHorizontalGroup(
            jpFilepickerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
        );
        jpFilepickerLayout.setVerticalGroup(
            jpFilepickerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
        );

        jtpPrincipal.addTab("Cargar Fichero", jpFilepicker);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIniciarSimulacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFecha)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHora)
                .addContainerGap())
            .addComponent(jtpPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnIniciarSimulacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtpPrincipal))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSimulacionActionPerformed
        // Habilitar/deshabilitar controles
        if (!this.enFuncionamiento) {
            //Iniciar
            if (this.comprobarIp(this.txtIp.getText()) && this.comprobarPuerto(this.txtPuerto.getText())) {
                //Puerto a entero
                int puerto = Integer.parseInt(this.txtPuerto.getText());
                this.socket = new ClienteUDP(txtIp.getText(), puerto);
                if (this.socket.isOk()) {
                    //Ip y Puerto correctos
                    this.enFuncionamiento = true;
                    this.btnIniciarSimulacion.setText("Detener");
//                this.jtpPrincipal.setSelectedIndex(1);
                    this.txtIp.setEnabled(false);
                    this.txtPuerto.setEnabled(false);
                    this.txtMensaje.setEnabled(true);
                    this.btnEnviarMensaje.setEnabled(true);
                    this.jFileChooser1.setEnabled(true);
                    this.txtFile.setEnabled(true);
                    this.btnCargarFichero.setEnabled(true);

                    this.txtLog.setText(this.txtLog.getText() + "[INICIANDO SIM. ]\n");
                } else {
                    //Error al crear el socket
                    showMessageDialog(null, "Ha ocurrido un error al intentar crear el socket", "No se puede iniciar", 2);
                    this.jtpPrincipal.setSelectedIndex(0);
                }
            } else {
                //Error en IP o Puerto
                showMessageDialog(null, "La dirección IP y/o el puerto son incorrectos.", "No se puede iniciar", 2);
                this.jtpPrincipal.setSelectedIndex(0);
            }
        } else {
            //Apagar
            this.enFuncionamiento = false;
            this.btnIniciarSimulacion.setText("Iniciar");
            this.txtIp.setEnabled(true);
            this.txtPuerto.setEnabled(true);
            this.txtLog.setText(this.txtLog.getText() + "[DETENIENDO SIM.]\n");
            this.txtMensaje.setEnabled(false);
            this.btnEnviarMensaje.setEnabled(false);
            this.jFileChooser1.setEnabled(false);
            this.txtFile.setEnabled(false);
            this.btnCargarFichero.setEnabled(false);
            this.socket = null;
        }
    }//GEN-LAST:event_btnIniciarSimulacionActionPerformed

    private void btnEnviarMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarMensajeActionPerformed
        if ("".equals(this.txtMensaje.getText())) {
            //No hay nada que enviar
            showMessageDialog(null, "No ha indicado nada para enviar", "No se ejecutó la operación", 2);
        } else {
            if (this.socket.mandarMensajeUDP(this.txtMensaje.getText())) {
                showMessageDialog(null, "¡Mensaje enviado!", "Éxito", 2);
            } else {
                showMessageDialog(null, "Ha ocurrido un error en el envío del mensaje", "Error", 2);
            }
        }
    }//GEN-LAST:event_btnEnviarMensajeActionPerformed

    private void btnCargarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarFicheroActionPerformed
        // TODO add your handling code here:
        try {
            String sCadena;
            BufferedReader bf = new BufferedReader(new FileReader(this.txtFile.getText()));
            while ((sCadena = bf.readLine()) != null) {
                System.out.println(sCadena);
            }
        } catch (Exception e) {
            showMessageDialog(null, "Ha ocurrido un error en la lectura del fichero de datos", "Error", 2);
        }
    }//GEN-LAST:event_btnCargarFicheroActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == jFileChooser1.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextArea
                txtFile.setText(file.getPath());
            } catch (Exception e) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Interfaz().setVisible(true);
            }
        });
    }

    /**
     * Comprueba si una IP es correcta según una expresión regular
     *
     * @param ip Cadena con la IP
     * @return true si es correcta o false en caso contrario
     */
    private boolean comprobarIp(String ip) {
        String ipPattern
                = "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\."
                + "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";
        Pattern pattern = Pattern.compile(ipPattern);
        Matcher matcher = pattern.matcher(ip);
        return matcher.matches() || "localhost".equals(ip);
    }

    /**
     * Comprueba si un puerto de red es correcto [1, 65534]
     *
     * @param puerto Cadena con el puerto
     * @return true si es correcto o false en caso contrario
     */
    private boolean comprobarPuerto(String puerto) {
        try {
            Integer p = Integer.parseInt(puerto);
            return (p > 1 && p < 655350);
        } catch (NumberFormatException e) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarFichero;
    private javax.swing.JButton btnEnviarMensaje;
    private javax.swing.JButton btnIniciarSimulacion;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel jpConfiguracion;
    private javax.swing.JPanel jpFilepicker;
    private javax.swing.JScrollPane jpLog;
    private javax.swing.JTabbedPane jtpPrincipal;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtIp;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtMensaje;
    private javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables
}
